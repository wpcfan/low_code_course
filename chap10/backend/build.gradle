plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.+'
    id 'io.spring.dependency-management' version '1.1.+'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.mooc'
version = '1.0.0'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    mavenCentral()
}

// 项目依赖版本号定义
ext {
    qiNiuVersion = '7.13.+'
    springdocVersion = '2.1.+'
    hypersistenceVersion = '3.5.+'
    testcontainersVersion = '1.19.+'
    logbackGelfVersion = '4.0.+'
    redissionVersion = '3.23.4'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "org.redisson:redisson-spring-boot-starter:${redissionVersion}"
    implementation "org.redisson:redisson-hibernate-6:${redissionVersion}"
    implementation "io.hypersistence:hypersistence-utils-hibernate-62:${hypersistenceVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    implementation "com.qiniu:qiniu-java-sdk:${qiNiuVersion}"
    implementation "de.siegmar:logback-gelf:${logbackGelfVersion}"
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.hamcrest:hamcrest-library'
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation "org.testcontainers:mysql:${testcontainersVersion}"
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}
